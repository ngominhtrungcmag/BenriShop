// <auto-generated />
using BenriShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BenriShop.Migrations
{
    [DbContext(typeof(BenriShopContext))]
    partial class BenriShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BenriShop.Models.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Fullname")
                        .HasColumnName("FULLNAME")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("PASSWORD")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Phonenumber")
                        .HasColumnName("PHONENUMBER")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnName("ROLE")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Username");

                    b.ToTable("ACCOUNT");
                });

            modelBuilder.Entity("BenriShop.Models.Cartitem", b =>
                {
                    b.Property<int>("Productid")
                        .HasColumnName("PRODUCTID")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Quantityincart")
                        .HasColumnName("QUANTITYINCART")
                        .HasColumnType("int");

                    b.HasKey("Productid", "Username");

                    b.HasIndex("Productid")
                        .HasName("ADDED_FK");

                    b.HasIndex("Username")
                        .HasName("HAVE_ITEM_IN_CART_FK");

                    b.ToTable("CARTITEM");
                });

            modelBuilder.Entity("BenriShop.Models.Category", b =>
                {
                    b.Property<string>("Categoryid")
                        .HasColumnName("CATEGORYID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Categoryid");

                    b.ToTable("CATEGORY");
                });

            modelBuilder.Entity("BenriShop.Models.Color", b =>
                {
                    b.Property<string>("Colorid")
                        .HasColumnName("COLORID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Colorid");

                    b.ToTable("COLOR");
                });

            modelBuilder.Entity("BenriShop.Models.HaveTag", b =>
                {
                    b.Property<int>("Productid")
                        .HasColumnName("PRODUCTID")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Tagid")
                        .HasColumnName("TAGID")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Productid", "Tagid");

                    b.HasIndex("Productid")
                        .HasName("HAVE_TAG_FK");

                    b.HasIndex("Tagid")
                        .HasName("HAVE_TAG2_FK");

                    b.ToTable("HAVE_TAG");
                });

            modelBuilder.Entity("BenriShop.Models.Image", b =>
                {
                    b.Property<int>("Productid")
                        .HasColumnName("PRODUCTID")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Imageid")
                        .HasColumnName("IMAGEID")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnName("LINK")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("Productid", "Imageid");

                    b.HasIndex("Productid")
                        .HasName("HAVE_IMAGE_FK");

                    b.ToTable("IMAGE");
                });

            modelBuilder.Entity("BenriShop.Models.Order", b =>
                {
                    b.Property<string>("Orderid")
                        .HasColumnName("ORDERID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Payment")
                        .HasColumnName("PAYMENT")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasColumnName("USERNAME")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Orderid");

                    b.HasIndex("Username")
                        .HasName("ORDER_FK");

                    b.ToTable("ORDER");
                });

            modelBuilder.Entity("BenriShop.Models.Orderitem", b =>
                {
                    b.Property<int>("Productid")
                        .HasColumnName("PRODUCTID")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Orderid")
                        .HasColumnName("ORDERID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Quantityinorder")
                        .HasColumnName("QUANTITYINORDER")
                        .HasColumnType("int");

                    b.HasKey("Productid", "Orderid");

                    b.HasIndex("Orderid")
                        .HasName("HAVE_ITEM_FK");

                    b.HasIndex("Productid")
                        .HasName("ORDERED_FK");

                    b.ToTable("ORDERITEM");
                });

            modelBuilder.Entity("BenriShop.Models.Product", b =>
                {
                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRODUCTID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoryid")
                        .IsRequired()
                        .HasColumnName("CATEGORYID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("Price")
                        .HasColumnName("PRICE")
                        .HasColumnType("int");

                    b.Property<string>("Productdescription")
                        .IsRequired()
                        .HasColumnName("PRODUCTDESCRIPTION")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Productname")
                        .IsRequired()
                        .HasColumnName("PRODUCTNAME")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Storagequantity")
                        .HasColumnName("STORAGEQUANTITY")
                        .HasColumnType("int");

                    b.HasKey("Productid");

                    b.HasIndex("Categoryid")
                        .HasName("HAVE_CATEGORY_FK");

                    b.ToTable("PRODUCT");
                });

            modelBuilder.Entity("BenriShop.Models.Shipping", b =>
                {
                    b.Property<string>("Orderid")
                        .HasColumnName("ORDERID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Shippingid")
                        .HasColumnName("SHIPPINGID")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int>("Cost")
                        .HasColumnName("COST")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnName("NOTE")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("Status")
                        .HasColumnName("STATUS")
                        .HasColumnType("int");

                    b.HasKey("Orderid", "Shippingid");

                    b.HasIndex("Orderid")
                        .HasName("HAVE_SHIPMENT_FK");

                    b.ToTable("SHIPPING");
                });

            modelBuilder.Entity("BenriShop.Models.Size", b =>
                {
                    b.Property<string>("Sizeid")
                        .HasColumnName("SIZEID")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("Sizeid");

                    b.ToTable("SIZE");
                });

            modelBuilder.Entity("BenriShop.Models.Sizeofproducthadcolor", b =>
                {
                    b.Property<string>("Sizeid")
                        .HasColumnName("SIZEID")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Colorid")
                        .HasColumnName("COLORID")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("Productid")
                        .HasColumnName("PRODUCTID")
                        .HasColumnType("int")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Quantityinsizeofcolor")
                        .HasColumnName("QUANTITYINSIZEOFCOLOR")
                        .HasColumnType("int");

                    b.HasKey("Sizeid", "Colorid", "Productid");

                    b.HasIndex("Colorid")
                        .HasName("COLOR_HAVE_SIZE_FK");

                    b.HasIndex("Productid")
                        .HasName("PRODUCT_HAVE_SIZE_AND_COLOR_FK");

                    b.HasIndex("Sizeid")
                        .HasName("SIZE_HAVE_COLOR_FK");

                    b.ToTable("SIZEOFPRODUCTHADCOLOR");
                });

            modelBuilder.Entity("BenriShop.Models.Tag", b =>
                {
                    b.Property<string>("Tagid")
                        .HasColumnName("TAGID")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Tagid");

                    b.ToTable("TAG");
                });

            modelBuilder.Entity("BenriShop.Models.Cartitem", b =>
                {
                    b.HasOne("BenriShop.Models.Product", "Product")
                        .WithMany("Cartitem")
                        .HasForeignKey("Productid")
                        .HasConstraintName("FK_CARTITEM_ADDED_PRODUCT")
                        .IsRequired();

                    b.HasOne("BenriShop.Models.Account", "UsernameNavigation")
                        .WithMany("Cartitem")
                        .HasForeignKey("Username")
                        .HasConstraintName("FK_CARTITEM_HAVE_ITEM_ACCOUNT")
                        .IsRequired();
                });

            modelBuilder.Entity("BenriShop.Models.HaveTag", b =>
                {
                    b.HasOne("BenriShop.Models.Product", "Product")
                        .WithMany("HaveTag")
                        .HasForeignKey("Productid")
                        .HasConstraintName("FK_HAVE_TAG_HAVE_TAG_PRODUCT")
                        .IsRequired();

                    b.HasOne("BenriShop.Models.Tag", "Tag")
                        .WithMany("HaveTag")
                        .HasForeignKey("Tagid")
                        .HasConstraintName("FK_HAVE_TAG_HAVE_TAG2_TAG")
                        .IsRequired();
                });

            modelBuilder.Entity("BenriShop.Models.Image", b =>
                {
                    b.HasOne("BenriShop.Models.Product", "Product")
                        .WithMany("Image")
                        .HasForeignKey("Productid")
                        .HasConstraintName("FK_IMAGE_HAVE_IMAG_PRODUCT")
                        .IsRequired();
                });

            modelBuilder.Entity("BenriShop.Models.Order", b =>
                {
                    b.HasOne("BenriShop.Models.Account", "UsernameNavigation")
                        .WithMany("Order")
                        .HasForeignKey("Username")
                        .HasConstraintName("FK_ORDER_ORDER_ACCOUNT");
                });

            modelBuilder.Entity("BenriShop.Models.Orderitem", b =>
                {
                    b.HasOne("BenriShop.Models.Order", "Order")
                        .WithMany("Orderitem")
                        .HasForeignKey("Orderid")
                        .HasConstraintName("FK_ORDERITE_HAVE_ITEM_ORDER")
                        .IsRequired();

                    b.HasOne("BenriShop.Models.Product", "Product")
                        .WithMany("Orderitem")
                        .HasForeignKey("Productid")
                        .HasConstraintName("FK_ORDERITE_ORDERED_PRODUCT")
                        .IsRequired();
                });

            modelBuilder.Entity("BenriShop.Models.Product", b =>
                {
                    b.HasOne("BenriShop.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("Categoryid")
                        .HasConstraintName("FK_PRODUCT_HAVE_CATE_CATEGORY")
                        .IsRequired();
                });

            modelBuilder.Entity("BenriShop.Models.Shipping", b =>
                {
                    b.HasOne("BenriShop.Models.Order", "Order")
                        .WithMany("Shipping")
                        .HasForeignKey("Orderid")
                        .HasConstraintName("FK_SHIPPING_HAVE_SHIP_ORDER")
                        .IsRequired();
                });

            modelBuilder.Entity("BenriShop.Models.Sizeofproducthadcolor", b =>
                {
                    b.HasOne("BenriShop.Models.Color", "Color")
                        .WithMany("Sizeofproducthadcolor")
                        .HasForeignKey("Colorid")
                        .HasConstraintName("FK_SIZEOFPR_COLOR_HAV_COLOR")
                        .IsRequired();

                    b.HasOne("BenriShop.Models.Product", "Product")
                        .WithMany("Sizeofproducthadcolor")
                        .HasForeignKey("Productid")
                        .HasConstraintName("FK_SIZEOFPR_PRODUCT_H_PRODUCT")
                        .IsRequired();

                    b.HasOne("BenriShop.Models.Size", "Size")
                        .WithMany("Sizeofproducthadcolor")
                        .HasForeignKey("Sizeid")
                        .HasConstraintName("FK_SIZEOFPR_SIZE_HAVE_SIZE")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
